buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath 'net.researchgate:gradle-release:2.0.2'
    }
}

apply plugin: 'java'
apply plugin: 'java-library-distribution'
apply plugin: 'com.bmuschko.nexus'
apply plugin: 'net.researchgate.release'
apply plugin: 'wrapper'

wrapper {
    gradleVersion = "2.3"
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'junit:junit:4.12',
            'ognl:ognl:2.6.9'

    compile ('xom:xom:1.2.5') {
        exclude group: 'xalan', module: 'xalan'
        exclude group: 'xerces', module: 'xercesImpl'
        exclude group: 'xml-apis', module: 'xml-apis'
    }
}

sourceSets {
    testDummies {  // "crash test dummies" - specs+fixtures that are used by the tests but aren't run as tests themselves
        java {
            srcDir 'src/test-dummies/java'
        }
        resources {
            srcDir 'src/test-dummies/resources'
        }
        compileClasspath = sourceSets.main.output + configurations.compile
    }
}

sourceCompatibility = 1.5
targetCompatibility = 1.5

// In order to verify that the build works with JDK5, run this task before compileJava
task setJava5ClassPath << {
    def java5BootClassPath = System.env.JAVA5_BOOTCLASSPATH
    if (!(java5BootClassPath)) {
        throw new TaskInstantiationException('''ERROR:
The environment variable JAVA5_BOOTCLASSPATH must be set to a Java 5 rt.jar.
While the test classes require Java 6 or later, this variable must be set to
ensure compatibility with Java 5 libraries for the main classes.''')
    }
    compileJava.options.bootClasspath = java5BootClassPath
}

test {
    systemProperties['concordion.output.dir'] = "${reporting.baseDir}"
}

compileTestJava.dependsOn compileTestDummiesJava
release.dependsOn clean
release.dependsOn setJava5ClassPath

distributions {
    main {
        contents {
            from ('.') { include '*.txt','build.gradle','src/**' }
            into ('lib') {
                from 'licenses'
            }
        }
    }
}

// 'gradle release' will also upload release to Nexus
createReleaseTag.dependsOn uploadArchives
release.dependsOn

extraArchive {
    tests = true    // create tests jar file and upload
}

modifyPom {
    project {
        name 'Concordion'
        description 'Concordion is an open source framework for Java that lets you turn a plain English description of a requirement into an automated test.'
        url 'http://www.concordion.org'
        packaging 'jar'
        inceptionYear '2008'

        scm {
            url 'https://github.com/concordion/concordion.git'
            connection 'scm:git:git://github.com/concordion/concordion.git'
            developerConnection 'scm:git:git@github.com:concordion/concordion.git'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.html'
                distribution 'repo'
            }
        }

        issueManagement{
            system 'GoogleCode'
            url 'http://code.google.com/p/concordion/issues/list'
        }

        developers {
            developer {
                id 'peterson3'
                name 'David Peterson'
                roles { role 'Project Owner' }
            }
            developer {
                id 'jose.m.beas'
                roles  { role 'Developer' }
            }
            developer {
                id 'nigel.charman.nz'
                roles  { role 'Developer' }
            }
            developer {
                id 'habuma'
                roles  { role 'Developer' }
            }
            developer {
                id 'pinfieldharm'
                roles  { role 'Developer' }
            }
            developer {
                id 'wangyizhuo'
                roles  { role 'Developer' }
            }
        }
    }
}
